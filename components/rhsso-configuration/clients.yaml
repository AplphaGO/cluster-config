apiVersion: keycloak.org/v1alpha1
kind: KeycloakClient
metadata:
  name: ocp-local-cluster 
  namespace: sso
  labels:
    app: sso
spec:
  realmSelector:
    matchLabels:
      app: sso
  client:
    id: ocp-hub-client
    clientId: ocp-hub-client
    secret: ocp-secret
    rootUrl: https://oauth-openshift.${SUB_DOMAIN}/oauth2callback
    redirectUris:
      - /keycloak
    clientAuthenticatorType: client-secret
    standardFlowEnabled: true
    directAccessGrantsEnabled: true
    implicitFlowEnabled: false
    defaultClientScopes:
      - profile
      - email
    consentRequired: false
---
apiVersion: keycloak.org/v1alpha1
kind: KeycloakClient
metadata:
  name: spoke4
  namespace: sso
  labels:
    app: sso
spec:
  realmSelector:
    matchLabels:
      app: sso
  client:
    id: ocp-spoke4-client
    clientId: ocp-spoke4-client
    secret: ocp-secret
    #rootUrl: https://oauth-openshift.apps.prod.${PLATFORM_BASE_DOMAIN}/oauth2callback
    rootUrl: https://oauth-openshift.apps.spoke4.lab.loca/oauth2callback
    redirectUris:
      - /oidckeycloak
    clientAuthenticatorType: client-secret
    standardFlowEnabled: true
    directAccessGrantsEnabled: true
    implicitFlowEnabled: false
    defaultClientScopes:
      - profile
      - email
    consentRequired: false      
#---
#apiVersion: keycloak.org/v1alpha1
#kind: KeycloakClient
#metadata:
#  name: ocp-non-prod
#  namespace: sso
#  labels:
#    app: sso
#spec:
#  realmSelector:
#    matchLabels:
#      app: sso
#  client:
#    id: ocp-non-prod-client
#    clientId: ocp-non-prod-client
#    secret: ocp-secret
#    rootUrl: https://oauth-openshift.apps.non-prod.${PLATFORM_BASE_DOMAIN}/oauth2callback
#    redirectUris:
#      - /oidckeycloak
#    clientAuthenticatorType: client-secret
#    standardFlowEnabled: true
#    directAccessGrantsEnabled: true
#    implicitFlowEnabled: false
#    defaultClientScopes:
#      - profile
#      - email
#    consentRequired: false
#---
#apiVersion: keycloak.org/v1alpha1
#kind: KeycloakClient
#metadata:
#  name: backstage
#  namespace: sso
#  labels:
#    app: sso
#spec:
#  realmSelector:
#    matchLabels:
#      app: sso
#  client:
#    id: backstage
#    clientId: backstage
#    secret: ocp-secret
#    rootUrl: https://redhat-developer-hub-redhat-developer-hub.apps.${CLUSTER_BASE_DOMAIN}
#    redirectUris:
#      - /oauth2/callback
#    clientAuthenticatorType: client-secret
#    standardFlowEnabled: true
#    directAccessGrantsEnabled: true
#    implicitFlowEnabled: false
#    defaultClientScopes:
#      - profile
#      - email
#    consentRequired: false
#    serviceAccountsEnabled: true
#  serviceAccountClientRoles:
#    realm-management:
#      - query-groups
#      - query-users
#      - view-users
---
apiVersion: keycloak.org/v1alpha1
kind: KeycloakClient
metadata:
  name: vault
  namespace: sso
  labels:
    app: sso
spec:
  realmSelector:
    matchLabels:
      app: sso
  client:
    id: vault
    clientId: vault
    secret: vault-secret
    redirectUris:
      - https://vault.${SUB_DOMAIN}/ui/vault/auth/keycloak/oidc/callback
      - https://vault.${SUB_DOMAIN}/v1/auth/keycloak/oidc/callback
      - http://localhost:8250/oidc/callback
    clientAuthenticatorType: client-secret
    standardFlowEnabled: true
    directAccessGrantsEnabled: true
    implicitFlowEnabled: false
    defaultClientScopes:
      - profile
      - email
    consentRequired: false
    protocolMappers:
    - config:
        claim.name: aud
        claim.value: vault
        id.token.claim: "true"
        access.token.claim: "true"
        userinfo.token.claim: "true"
      name: vault
      protocol: openid-connect
      protocolMapper: oidc-hardcoded-claim-mapper
    - name: groups
      protocol: openid-connect
      protocolMapper: "oidc-group-membership-mapper"
      config:
        "access.token.claim": "true"
        "claim.name": "groups"
        "full.path": "false"
        "id.token.claim": "true"
        "userinfo.token.claim": "true"
---
apiVersion: keycloak.org/v1alpha1
kind: KeycloakClient
metadata:
  name: argocd-client
  namespace: sso
  labels:
    app: sso
spec:
  realmSelector:
    matchLabels:
      app: sso
  client:
    id: argocd-client
    clientId: argocd-client
    secret: ocp-secret
    adminUrl: https://openshift-gitops-server-openshift-gitops.${SUB_DOMAIN}
    baseUrl: https://openshift-gitops-server-openshift-gitops.${SUB_DOMAIN}
    rootUrl: https://openshift-gitops-server-openshift-gitops.${SUB_DOMAIN}
    redirectUris:
      - https://openshift-gitops-server-openshift-gitops.${SUB_DOMAIN}/auth/callback
    clientAuthenticatorType: client-secret
    standardFlowEnabled: true
    directAccessGrantsEnabled: true
    implicitFlowEnabled: false
    defaultClientScopes:
      - profile
      - email
    consentRequired: false
    protocolMappers:
    - name: groups
      protocol: openid-connect
      protocolMapper: "oidc-group-membership-mapper"
      config:
        "access.token.claim": "true"
        "claim.name": "groups"
        "full.path": "false"
        "id.token.claim": "true"
        "userinfo.token.claim": "true"            
---
apiVersion: keycloak.org/v1alpha1
kind: KeycloakClient
metadata:
  name: argocd-spoke4-client
  namespace: sso
  labels:
    app: sso
spec:
  realmSelector:
    matchLabels:
      app: sso
  client:
    id: argocd-spoke4-client
    clientId: argocd-spoke4-client
    secret: ocp-secret
    #adminUrl: https://openshift-gitops-server-openshift-gitops.${SUB_DOMAIN}
    #baseUrl: https://openshift-gitops-server-openshift-gitops.${SUB_DOMAIN}
    #rootUrl: https://openshift-gitops-server-openshift-gitops.${SUB_DOMAIN}
    adminUrl: https://openshift-gitops-server-openshift-gitops.apps.spoke4.lab.local
    baseUrl: https://openshift-gitops-server-openshift-gitops.apps.spoke4.lab.local
    rootUrl: https://openshift-gitops-server-openshift-gitops.apps.spoke4.lab.local
    redirectUris:
      - https://openshift-gitops-server-openshift-gitops.apps.spoke4.lab.local/auth/callback
    clientAuthenticatorType: client-secret
    standardFlowEnabled: true
    directAccessGrantsEnabled: true
    implicitFlowEnabled: false
    defaultClientScopes:
      - profile
      - email
    consentRequired: false
    protocolMappers:
    - name: groups
      protocol: openid-connect
      protocolMapper: "oidc-group-membership-mapper"
      config:
        "access.token.claim": "true"
        "claim.name": "groups"
        "full.path": "false"
        "id.token.claim": "true"
        "userinfo.token.claim": "true"            
              